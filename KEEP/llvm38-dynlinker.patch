--- llvm-3.8.0.src/tools/clang/lib/Driver/Tools.cpp
+++ llvm-3.8.0.src.patched/tools/clang/lib/Driver/Tools.cpp
@@ -8634,26 +8634,30 @@
       return "/system/bin/linker";
   } else if (Arch == llvm::Triple::x86 || Arch == llvm::Triple::sparc ||
              Arch == llvm::Triple::sparcel)
-    return "/lib/ld-linux.so.2";
+    return "/lib/ld-musl-i386.so.1";
   else if (Arch == llvm::Triple::aarch64)
-    return "/lib/ld-linux-aarch64.so.1";
+    return "/lib/ld-musl-aarch64.so.1";
   else if (Arch == llvm::Triple::aarch64_be)
     return "/lib/ld-linux-aarch64_be.so.1";
   else if (Arch == llvm::Triple::arm || Arch == llvm::Triple::thumb) {
     if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
         arm::getARMFloatABI(ToolChain, Args) == arm::FloatABI::Hard)
-      return "/lib/ld-linux-armhf.so.3";
+      return "/lib/ld-musl-armhf.so.1";
     else
-      return "/lib/ld-linux.so.3";
+      return "/lib/ld-musl-arm.so.1";
   } else if (Arch == llvm::Triple::armeb || Arch == llvm::Triple::thumbeb) {
     // TODO: check which dynamic linker name.
     if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
         arm::getARMFloatABI(ToolChain, Args) == arm::FloatABI::Hard)
-      return "/lib/ld-linux-armhf.so.3";
+      return "/lib/ld-musl-armhf.so.1";
     else
-      return "/lib/ld-linux.so.3";
-  } else if (Arch == llvm::Triple::mips || Arch == llvm::Triple::mipsel ||
-             Arch == llvm::Triple::mips64 || Arch == llvm::Triple::mips64el) {
+      return "/lib/ld-musl-arm.so.1";
+  } else if (Arch == llvm::Triple::mips)
+      return "/lib/ld-musl-mips.so.1";
+  else if (Arch == llvm::Triple::mipsel)
+      return "/lib/ld-musl-mipsel.so.1";
+  else if (Arch == llvm::Triple::mips64 ||
+           Arch == llvm::Triple::mips64el) {
     std::string LibDir =
         "/lib" + mips::getMipsABILibSuffix(Args, ToolChain.getTriple());
     StringRef LibName;
@@ -8669,7 +8673,7 @@
 
     return (LibDir + "/" + LibName).str();
   } else if (Arch == llvm::Triple::ppc)
-    return "/lib/ld.so.1";
+    return "/lib/ld-musl-powerpc.so.1";
   else if (Arch == llvm::Triple::ppc64) {
     if (ppc::hasPPCAbiArg(Args, "elfv2"))
       return "/lib64/ld64.so.2";
@@ -8686,7 +8690,7 @@
            ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUX32)
     return "/libx32/ld-linux-x32.so.2";
   else
-    return "/lib64/ld-linux-x86-64.so.2";
+    return "/lib64/ld-musl-x86_64.so.1";
 }
 
 static void AddRunTimeLibs(const ToolChain &TC, const Driver &D,

