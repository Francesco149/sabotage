[mirrors]
https://github.com/telegramdesktop/tdesktop/archive/v1.1.7.tar.gz

[vars]
filesize=16754793
sha512=a79e5ba19149be3e6fdae5759cfb399fd45bb68c32a8e0fabef1633a0f1c25220fdc93a94081ab3edbf1b9fb8790821cf46c602174a5e8c94ec35040b089fd30
pkgver=1
tardir=tdesktop-1.1.7

[deps]
libappindicator
libressl
breakpad-git
qt5
openal
libopus
zlib
ffmpeg
gtk+2
libdrm
libx11
libva
telegram-variant

[deps.host]
cmake

[build]
# Place your custom config in /etc/tdesktop.h and rebuild
# if you wish to customize fonts or api key
cp "$butch_prefix/etc/tdesktop.h" ./config.h || \
cat > config.h << "EOF"
#pragma once

/* the default values for these are my own app id.
 * if you edit this, you should get your own at
 * https://core.telegram.org/api/obtaining_api_id */
#define TELEGRAM_API_ID   33266
#define TELEGRAM_API_HASH "8b40dc9cf6427eb16c493e78ac4630ac"

/* original telegram desktop key */
/* #define TELEGRAM_API_ID   17349 */
/* #define TELEGRAM_API_HASH "344583e45741c457fe1862106095a5eb" */

/* change these to any font name to override the defaults.
   example: qsl("Arial") */
#define TELEGRAM_FT_OVERRIDE           qsl("")
#define TELEGRAM_FT_SEMIBOLD_OVERRIDE  qsl("")
#define TELEGRAM_FT_MONOSPACE_OVERRIDE qsl("")

EOF

# get all dependencies --------------------------------------------
# TODO: find/make tarballs for all dependencies
prevdir="$(pwd)"
cd Telegram/ThirdParty/

rm -rf GSL
git clone https://github.com/Microsoft/GSL.git || exit 1
cd GSL
git checkout c5851a8161938798c5594a66420cb814fea92711 || exit 1
cd ..

rm -rf libtgvoid
git clone https://github.com/grishka/libtgvoip.git || exit 1
cd libtgvoip
git checkout c63a3bbdcf0e9222404f0eb22970a0edfeb69858 || exit 1
patch -p1 < "$K"/libtgvoip-no-pulse.patch
cd ..

rm -rf variant
tar xf "$C"/v1.1.3.tar.gz # fuck github tarball naming
mv variant-1.1.3 variant

# minizip fix -----------------------------------------------------
# this version of minizip expects FO (macro for pre-ansi c function
# declarations) to be defined
for f in minizip/*.h minizip/*.c
do
    echo "Patching zlib.h in $f..."
    sed 's|zlib.h|zlib_with_of.h|g' -i $f || exit 1
done

printf "#include <zlib.h>\n#define OF(args) args" \
  > minizip/zlib_with_of.h

cd "$prevdir"

# apply all other patches -----------------------------------------
patch -p1 < "$K"/telegram-add-cmake.patch
patch -p1 < "$K"/telegram-add-libtgvoip-cmake.patch
patch -p1 < "$K"/telegram-qt-plugins.patch
patch -p1 < "$K"/telegram-api-id.patch
patch -p1 < "$K"/telegram-font-override.patch
patch -p1 < "$K"/telegram-downgrade-qt-version.patch
patch -p1 < "$K"/telegram-fix-static-qt-functions.patch
patch -p1 < "$K"/telegram-fix-xdg.patch
patch -p1 < "$K"/telegram-fix-pch-ignoring-cxxflags.patch

# musl fix (execinfo is specific to glibc) ------------------------
for f in Telegram/SourceFiles/platform/linux/specific_linux.h \
         Telegram/SourceFiles/logs.cpp
do
    echo "Removing execinfo.h from $f..."
    sed -i 's|#include <execinfo.h>||g' $f || exit 1
done

logscpp=Telegram/SourceFiles/logs.cpp
mv $logscpp ./tmp.cpp

cat > $logscpp << "EOF"
#include <sys/types.h>
#define backtrace(A,B) 0
#define backtrace_symbols(A, B) 0
#define backtrace_symbols_fd(A,B,C) 0
EOF

cat ./tmp.cpp >> $logscpp

# libressl fix (FIPS_mode_set was dropped) ------------------------
utilscpp=Telegram/SourceFiles/core/utils.cpp
mv $utilscpp ./tmp.cpp
echo "#define FIPS_mode_set(x)" > $utilscpp
cat ./tmp.cpp >> $utilscpp

dest="$butch_root_dir$butch_prefix"
mv lib/xdg/telegramdesktop.desktop lib/xdg/telegram-desktop.desktop

# finally build this massive broken piece of bloat ----------------
cd Telegram

mkdir -p build && cd build
for i in ar ld nm objcopy objdump strip ; do
    printf '#!/bin/sh\n%s%s "$@"\n' "$CROSS_COMPILE" "$i" \
      > "$CROSS_COMPILE""$i"
    chmod +x "$CROSS_COMPILE""$i"
done
[ -n "$CROSS_COMPILE" ] && xconfflags="
-DCMAKE_FIND_ROOT_PATH="$dest" \
-DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
-DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
-DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
-DCMAKE_AR="$CROSS_COMPILE"ar \
-DCMAKE_LD="$CROSS_COMPILE"ld \
-DCMAKE_NM="$CROSS_COMPILE"nm \
-DCMAKE_OBJCOPY="$CROSS_COMPILE"objcopy \
-DCMAKE_OBJDUMP="$CROSS_COMPILE"objdump \
-DCMAKE_STRIP="$CROSS_COMPILE"strip \
"

CFLAGS="-D_GNU_SOURCE $optcflags" \
LDFLAGS="$optldflags -Wl,-rpath-link=$dest/lib" \
CXXFLAGS="$optcflags" \
cmake $xconfflags \
  -DCMAKE_INSTALL_PREFIX="$butch_prefix" \
  -DCMAKE_VERBOSE_MAKEFILE=ON \
  -DBREAKPAD_INCLUDE_DIR="$butch_prefix/include/breakpad" \
  -DBREAKPAD_LIBRARY_DIR="$butch_prefix/lib/libbreakpad_client.a" \
  ..
make -j$MAKE_THREADS VERBOSE=1

make DESTDIR="$butch_install_dir" install

for sz in 16 32 48 64 128 256 512; do
    iconpath="$dest/share/icons/hicolor/${sz}x${sz}/apps"
    install -Dm644 "../Resources/art/icon${sz}.png" \
                   "$iconpath/telegram-desktop.png"
done
